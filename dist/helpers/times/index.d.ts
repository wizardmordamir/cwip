export declare const addMomentTimeZone: (momentTimezone: any, defaultTZ?: string) => void;
export declare const dbTimeFormat = "YYYY-MM-DD HH:mm:ss";
export declare const dateFormatRegexes: {
    'MM/DD/YYYY': RegExp;
    'M/DD/YYYY': RegExp;
    'MM/D/YYYY': RegExp;
    'M/D/YYYY': RegExp;
    'MM/DD/YY': RegExp;
    'M/D/YY': RegExp;
    'M/DD/YY': RegExp;
    'MM/D/YY': RegExp;
    'YYYY/MM/DD': RegExp;
    'YYYY/M/DD': RegExp;
    'YYYY/MM/D': RegExp;
    'MM-DD-YYYY': RegExp;
    'M-DD-YYYY': RegExp;
    'MM-D-YYYY': RegExp;
    'M-D-YYYY': RegExp;
    'MM-DD-YY': RegExp;
    'M-D-YY': RegExp;
    'M-DD-YY': RegExp;
    'MM-D-YY': RegExp;
    'YYYY-MM-DD': RegExp;
    'YYYY-M-DD': RegExp;
    'YYYY-MM-D': RegExp;
    'YYYY/MM/DD HH:mm:ss': RegExp;
    'YYYY/M/DD HH:mm:ss': RegExp;
    'YYYY/MM/D HH:mm:ss': RegExp;
    'YYYY/M/D HH:mm:ss': RegExp;
    'YYYY-MM-DD HH:mm:ss': RegExp;
    'MMM D, YYYY': RegExp;
    'MMMM D, YYYY': RegExp;
    'YYYY-MM-DDTHH:mm:ssZ': RegExp;
    'YYYY-MM-DD HH:mm:ss.SSSSSSS': RegExp;
};
export declare const updateDateFormatRegexes: (newFormats: any) => {
    'MM/DD/YYYY': RegExp;
    'M/DD/YYYY': RegExp;
    'MM/D/YYYY': RegExp;
    'M/D/YYYY': RegExp;
    'MM/DD/YY': RegExp;
    'M/D/YY': RegExp;
    'M/DD/YY': RegExp;
    'MM/D/YY': RegExp;
    'YYYY/MM/DD': RegExp;
    'YYYY/M/DD': RegExp;
    'YYYY/MM/D': RegExp;
    'MM-DD-YYYY': RegExp;
    'M-DD-YYYY': RegExp;
    'MM-D-YYYY': RegExp;
    'M-D-YYYY': RegExp;
    'MM-DD-YY': RegExp;
    'M-D-YY': RegExp;
    'M-DD-YY': RegExp;
    'MM-D-YY': RegExp;
    'YYYY-MM-DD': RegExp;
    'YYYY-M-DD': RegExp;
    'YYYY-MM-D': RegExp;
    'YYYY/MM/DD HH:mm:ss': RegExp;
    'YYYY/M/DD HH:mm:ss': RegExp;
    'YYYY/MM/D HH:mm:ss': RegExp;
    'YYYY/M/D HH:mm:ss': RegExp;
    'YYYY-MM-DD HH:mm:ss': RegExp;
    'MMM D, YYYY': RegExp;
    'MMMM D, YYYY': RegExp;
    'YYYY-MM-DDTHH:mm:ssZ': RegExp;
    'YYYY-MM-DD HH:mm:ss.SSSSSSS': RegExp;
};
export declare const momentValidate: (date: any, finalFormat?: string) => any;
export declare const getTimeStringFormat: (dateString: any) => string;
export declare const getUTCDate: (original?: any, currentFormat?: string, format?: string) => any;
export declare const getESTDate: (date: any, format?: string) => any;
export declare const getLocalDate: (date: any, format?: string) => any;
export type TimeType = 'milliseconds' | 'seconds' | 'minutes' | 'hours' | 'days' | 'weeks' | 'months' | 'years';
export declare const timePastDate: import("../../functional/typescriptUtils").Curry<[timeType: TimeType, older: any, newer: any], number>;
export declare const minutesPastDateMoment: import("../../functional/typescriptUtils").Curry<[older: any, newer: any], number>;
export declare const hoursPastDateMoment: import("../../functional/typescriptUtils").Curry<[older: any, newer: any], number>;
export declare const daysPastDateMoment: import("../../functional/typescriptUtils").Curry<[older: any, newer: any], number>;
export declare const hoursPastDate: (date: Date, oldDate?: Date) => number;
export declare const timePastDateExcludeWeekend: (timeType: TimeType, older: Date | string, newer?: Date | string) => number;
//# sourceMappingURL=index.d.ts.map